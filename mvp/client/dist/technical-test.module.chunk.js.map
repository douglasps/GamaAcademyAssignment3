{"version":3,"sources":["./src/app/radio-group/radio-group/radio-group.component.css","./src/app/radio-group/radio-group/radio-group.component.html","./src/app/radio-group/radio-group/radio-group.component.ts","./src/app/radio/radio/radio.component.css","./src/app/radio/radio/radio.component.html","./src/app/radio/radio/radio.component.ts","./src/app/technical-test/technical-test.module.ts","./src/app/technical-test/technical-test/technical-test.component.css","./src/app/technical-test/technical-test/technical-test.component.html","./src/app/technical-test/technical-test/technical-test.component.ts"],"names":[],"mappings":"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","file":"technical-test.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio-group/radio-group/radio-group.component.css\n// module id = ./src/app/radio-group/radio-group/radio-group.component.css\n// module chunks = technical-test.module","module.exports = \"<h2>{{ number + ') ' + question.question }}</h2>\\n<div [class]=\\\"question.style\\\">\\n</div>\\n<app-radio *ngFor=\\\"let option of question.options\\\" [option]=\\\"option\\\" (selected)=\\\"selectedChanged($event)\\\" class=\\\"d-block\\\"></app-radio>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio-group/radio-group/radio-group.component.html\n// module id = ./src/app/radio-group/radio-group/radio-group.component.html\n// module chunks = technical-test.module","import { Component, Input, Output, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../core/api.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { Question } from '../../core/question';\r\n\r\n@Component({\r\n  selector: 'app-radio-group',\r\n  templateUrl: './radio-group.component.html',\r\n  styleUrls: ['./radio-group.component.css']\r\n})\r\nexport class RadioGroupComponent {\r\n  paramSub: Subscription;\r\n  loading = true;\r\n  error: boolean;\r\n  @Input() question: Question;\r\n  @Input() number: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private api: ApiService,\r\n    private title: Title\r\n  ) { }\r\n\r\n  getImgStyle(url: string) {\r\n    return `url(${url})`;\r\n  }\r\n\r\n  selectedChanged(event){\r\n    this.question.selectionedOption = event;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/radio-group/radio-group/radio-group.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio/radio/radio.component.css\n// module id = ./src/app/radio/radio/radio.component.css\n// module chunks = technical-test.module","module.exports = \"<label>\\n        <input type='radio' \\n            #myRadio\\n            [name]=\\\"option.group\\\"  \\n            [value]=\\\"option.value\\\"\\n            (click)=\\\"onRadioClicked(myRadio)\\\">\\n    {{option.text}}\\n</label>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio/radio/radio.component.html\n// module id = ./src/app/radio/radio/radio.component.html\n// module chunks = technical-test.module","import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../core/api.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { Option } from '../../core/option';\r\n\r\n@Component({\r\n  selector: 'app-radio',\r\n  templateUrl: './radio.component.html',\r\n  styleUrls: ['./radio.component.css']\r\n})\r\nexport class RadioComponent {\r\n  paramSub: Subscription;\r\n  loading = true;\r\n  error: boolean;\r\n  @Input() option: Option;\r\n  @Output() selected: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private api: ApiService,\r\n    private title: Title\r\n  ) { }\r\n\r\n  getImgStyle(url: string) {\r\n    return `url(${url})`;\r\n  }\r\n\r\n  onRadioClicked(radio){\r\n    this.selected.emit(radio.value);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/radio/radio/radio.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { TechnicalTestComponent } from './technical-test/technical-test.component';\r\nimport { RadioGroupComponent } from '../radio-group/radio-group/radio-group.component';\r\nimport { RadioComponent } from '../radio/radio/radio.component';\r\n\r\nconst TECHNICALTEST_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: TechnicalTestComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    RouterModule.forChild(TECHNICALTEST_ROUTES)\r\n  ],\r\n  declarations: [\r\n    TechnicalTestComponent,\r\n    RadioGroupComponent,\r\n    RadioComponent\r\n  ]\r\n})\r\nexport class TechnicalTestModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/technical-test/technical-test.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/technical-test/technical-test/technical-test.component.css\n// module id = ./src/app/technical-test/technical-test/technical-test.component.css\n// module chunks = technical-test.module","module.exports = \"<h1 class=\\\"text-center\\\">Technical Test</h1>\\r\\n<form (submit)=\\\"submiteTechnicalTest()\\\">\\r\\n<app-radio-group *ngFor=\\\"let question of questionList.questions; let i = index\\\" [question]=\\\"question\\\"  [number]=\\\"i+1\\\"></app-radio-group>\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-sucess\\\">Enviar</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/technical-test/technical-test/technical-test.component.html\n// module id = ./src/app/technical-test/technical-test/technical-test.component.html\n// module chunks = technical-test.module","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../core/api.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { QuestionList } from '../../core/questionList';\r\nimport { Question } from '../../core/question';\r\n\r\n@Component({\r\n  selector: 'app-technical-test',\r\n  templateUrl: './technical-test.component.html',\r\n  styleUrls: ['./technical-test.component.css']\r\n})\r\nexport class TechnicalTestComponent implements OnInit {\r\n  paramSub: Subscription;\r\n  loading = true;\r\n  error: boolean;\r\n  questionList: QuestionList;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private api: ApiService,\r\n    private title: Title\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.questionList = this.api.getQuestions$();\r\n  }\r\n\r\n  private _onNext(val: Question[]) {\r\n    this.loading = false;\r\n  }\r\n\r\n  private _onError(err, caught): Observable<any> {\r\n    this.loading = false;\r\n    this.error = true;\r\n    return Observable.throw('An error occurred fetching detail data for this dog.');\r\n  }\r\n\r\n  getPageTitle(question: Question[]): string {\r\n    //const pageTitle = `#${question.question}: ${question.answer}`;\r\n    //this.title.setTitle(pageTitle);\r\n    //return pageTitle;\r\n    return this.title.getTitle();\r\n  }\r\n\r\n  getImgStyle(url: string) {\r\n    return `url(${url})`;\r\n  }\r\n\r\n  submiteTechnicalTest(){\r\n    let valid = true;\r\n    this.questionList.questions.forEach(q =>{\r\n      if(q.selectionedOption == -1)\r\n      {\r\n        q.style = 'required';\r\n        valid = false;\r\n      }\r\n      else\r\n        q.style = '';\r\n    });\r\n\r\n    if(valid){\r\n      var score = this.questionList.calculateScore();\r\n      alert(score.message);\r\n      this.api.saveQuestions();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/technical-test/technical-test/technical-test.component.ts"],"sourceRoot":"webpack:///"}