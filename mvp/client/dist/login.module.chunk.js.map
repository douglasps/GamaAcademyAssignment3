{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login/login.component.css","./src/app/login/login/login.component.html","./src/app/login/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACQ;AACN;AACQ;AAEzD,IAAM,YAAY,GAAW;IAC3B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAc;KAC1B;CACF,CAAC;AAYF;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,uEAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,qEAAU;gBACV,qEAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;aACpC;YACD,YAAY,EAAE;gBACZ,8EAAc;aACf;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;ACvBxB,mB;;;;;;;ACAA,2vB;;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACgB;AACP;AACE;AAEP;AAKK;AAOlD;IAME,wBACU,KAAqB,EACrB,GAAe,EACf,KAAY,EACb,IAAe,EACd,MAAc;QAJd,UAAK,GAAL,KAAK,CAAgB;QACrB,QAAG,GAAH,GAAG,CAAY;QACf,UAAK,GAAL,KAAK,CAAO;QACb,SAAI,GAAJ,IAAI,CAAW;QACd,WAAM,GAAN,MAAM,CAAQ;QATxB,YAAO,GAAG,IAAI,CAAC;QAWb,IAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,IAAI;SACf,CAAC;IACJ,CAAC;IAEO,iCAAQ,GAAhB,UAAiB,GAAG,EAAE,MAAM;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAClF,CAAC;IAED,qCAAY,GAAZ,UAAa,QAAoB;QAC/B,gEAAgE;QAChE,iCAAiC;QACjC,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,oCAAW,GAAX,UAAY,GAAW;QACrB,MAAM,CAAC,SAAO,GAAG,MAAG,CAAC;IACvB,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAS;QAEhB,EAAE,EAAC,CAAC,CAAC,KAAK,CAAC,EAAC;YACV,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;iBACzD,IAAI,CAAC,sBAAY;gBAChB,EAAE,EAAC,CAAC,YAAY,CAAC;oBACf,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IA7CU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAQiB,uEAAc;YAChB,qEAAU;YACR,wEAAK;YACP,mEAAS;YACN,+DAAM;OAXb,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B","file":"login.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CoreModule } from '../core/core.module';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst LOGIN_ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CoreModule,\r\n    RouterModule.forChild(LOGIN_ROUTES)\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login/login.component.css\n// module id = ./src/app/login/login/login.component.css\n// module chunks = login.module","module.exports = \"<h1 class=\\\"text-center\\\">Login</h1>\\r\\n<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email:</label>\\r\\n        <input type=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\"\\r\\n          class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Digite o email\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Senha</label>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\"\\r\\n          class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Senha\\\" required>\\r\\n      </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login/login.component.html\n// module id = ./src/app/login/login/login.component.html\n// module chunks = login.module","import { Component} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ApiService } from '../../core/api.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { QuestionList } from '../../core/questionList';\r\nimport { Question } from '../../core/question';\r\nimport {NgForm} from '@angular/forms';\r\nimport { AuthGuard } from '../../auth/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent{\r\n  paramSub: Subscription;\r\n  loading = true;\r\n  error: boolean;\r\n  model;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private api: ApiService,\r\n    private title: Title,\r\n    public auth: AuthGuard,\r\n    private router: Router\r\n  ) { \r\n    this.model = {\r\n      email: null,\r\n      password: null\r\n    };\r\n  }\r\n\r\n  private _onError(err, caught): Observable<any> {\r\n    this.loading = false;\r\n    this.error = true;\r\n    return Observable.throw('An error occurred fetching detail data for this dog.');\r\n  }\r\n\r\n  getPageTitle(question: Question[]): string {\r\n    //const pageTitle = `#${question.question}: ${question.answer}`;\r\n    //this.title.setTitle(pageTitle);\r\n    //return pageTitle;\r\n    return this.title.getTitle();\r\n  }\r\n\r\n  getImgStyle(url: string) {\r\n    return `url(${url})`;\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n\r\n    if(f.valid){\r\n      this.auth.autenticate(this.model.email, this.model.password)\r\n        .then(autenticated => {\r\n          if(!autenticated)\r\n            alert('E-mail e/ou senha incorretos.');\r\n        });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login/login.component.ts"],"sourceRoot":"webpack:///"}